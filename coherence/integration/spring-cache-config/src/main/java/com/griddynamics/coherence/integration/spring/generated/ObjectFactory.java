//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.16 at 09:47:17 PM MSD 
//


package com.griddynamics.coherence.integration.spring.generated;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link BackupStorage }
     * 
     */
    public BackupStorage createBackupStorage() {
        return new BackupStorage();
    }

    /**
     * Create an instance of {@link LocalStorage }
     * 
     */
    public LocalStorage createLocalStorage() {
        return new LocalStorage();
    }

    /**
     * Create an instance of {@link BackingMapScheme }
     * 
     */
    public BackingMapScheme createBackingMapScheme() {
        return new BackingMapScheme();
    }

    /**
     * Create an instance of {@link InvocationScheme }
     * 
     */
    public InvocationScheme createInvocationScheme() {
        return new InvocationScheme();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link RootDirectory }
     * 
     */
    public RootDirectory createRootDirectory() {
        return new RootDirectory();
    }

    /**
     * Create an instance of {@link NearScheme }
     * 
     */
    public NearScheme createNearScheme() {
        return new NearScheme();
    }

    /**
     * Create an instance of {@link NioFileManager }
     * 
     */
    public NioFileManager createNioFileManager() {
        return new NioFileManager();
    }

    /**
     * Create an instance of {@link HostFilter }
     * 
     */
    public HostFilter createHostFilter() {
        return new HostFilter();
    }

    /**
     * Create an instance of {@link MaximumSize }
     * 
     */
    public MaximumSize createMaximumSize() {
        return new MaximumSize();
    }

    /**
     * Create an instance of {@link PartitionListener }
     * 
     */
    public PartitionListener createPartitionListener() {
        return new PartitionListener();
    }

    /**
     * Create an instance of {@link AddressProvider }
     * 
     */
    public AddressProvider createAddressProvider() {
        return new AddressProvider();
    }

    /**
     * Create an instance of {@link ParamValue }
     * 
     */
    public ParamValue createParamValue() {
        return new ParamValue();
    }

    /**
     * Create an instance of {@link InitiatorConfig }
     * 
     */
    public InitiatorConfig createInitiatorConfig() {
        return new InitiatorConfig();
    }

    /**
     * Create an instance of {@link VersionTransientScheme }
     * 
     */
    public VersionTransientScheme createVersionTransientScheme() {
        return new VersionTransientScheme();
    }

    /**
     * Create an instance of {@link ParamType }
     * 
     */
    public ParamType createParamType() {
        return new ParamType();
    }

    /**
     * Create an instance of {@link ClassName }
     * 
     */
    public ClassName createClassName() {
        return new ClassName();
    }

    /**
     * Create an instance of {@link ReplicatedScheme }
     * 
     */
    public ReplicatedScheme createReplicatedScheme() {
        return new ReplicatedScheme();
    }

    /**
     * Create an instance of {@link LocalScheme }
     * 
     */
    public LocalScheme createLocalScheme() {
        return new LocalScheme();
    }

    /**
     * Create an instance of {@link CachingSchemeMapping }
     * 
     */
    public CachingSchemeMapping createCachingSchemeMapping() {
        return new CachingSchemeMapping();
    }

    /**
     * Create an instance of {@link ProxyConfig }
     * 
     */
    public ProxyConfig createProxyConfig() {
        return new ProxyConfig();
    }

    /**
     * Create an instance of {@link CachestoreScheme }
     * 
     */
    public CachestoreScheme createCachestoreScheme() {
        return new CachestoreScheme();
    }

    /**
     * Create an instance of {@link KeyPartitioning }
     * 
     */
    public KeyPartitioning createKeyPartitioning() {
        return new KeyPartitioning();
    }

    /**
     * Create an instance of {@link SocketAddress }
     * 
     */
    public SocketAddress createSocketAddress() {
        return new SocketAddress();
    }

    /**
     * Create an instance of {@link OperationBundling }
     * 
     */
    public OperationBundling createOperationBundling() {
        return new OperationBundling();
    }

    /**
     * Create an instance of {@link InitParam }
     * 
     */
    public InitParam createInitParam() {
        return new InitParam();
    }

    /**
     * Create an instance of {@link Serializer }
     * 
     */
    public Serializer createSerializer() {
        return new Serializer();
    }

    /**
     * Create an instance of {@link VersionedBackingMapScheme }
     * 
     */
    public VersionedBackingMapScheme createVersionedBackingMapScheme() {
        return new VersionedBackingMapScheme();
    }

    /**
     * Create an instance of {@link AuthorizedHosts }
     * 
     */
    public AuthorizedHosts createAuthorizedHosts() {
        return new AuthorizedHosts();
    }

    /**
     * Create an instance of {@link ClassScheme }
     * 
     */
    public ClassScheme createClassScheme() {
        return new ClassScheme();
    }

    /**
     * Create an instance of {@link DistributedScheme }
     * 
     */
    public DistributedScheme createDistributedScheme() {
        return new DistributedScheme();
    }

    /**
     * Create an instance of {@link WriteDelaySeconds }
     * 
     */
    public WriteDelaySeconds createWriteDelaySeconds() {
        return new WriteDelaySeconds();
    }

    /**
     * Create an instance of {@link NioMemoryManager }
     * 
     */
    public NioMemoryManager createNioMemoryManager() {
        return new NioMemoryManager();
    }

    /**
     * Create an instance of {@link InitParams }
     * 
     */
    public InitParams createInitParams() {
        return new InitParams();
    }

    /**
     * Create an instance of {@link OutgoingMessageHandler }
     * 
     */
    public OutgoingMessageHandler createOutgoingMessageHandler() {
        return new OutgoingMessageHandler();
    }

    /**
     * Create an instance of {@link BundleConfig }
     * 
     */
    public BundleConfig createBundleConfig() {
        return new BundleConfig();
    }

    /**
     * Create an instance of {@link DiskScheme }
     * 
     */
    public DiskScheme createDiskScheme() {
        return new DiskScheme();
    }

    /**
     * Create an instance of {@link PagedExternalScheme }
     * 
     */
    public PagedExternalScheme createPagedExternalScheme() {
        return new PagedExternalScheme();
    }

    /**
     * Create an instance of {@link LocalAddress }
     * 
     */
    public LocalAddress createLocalAddress() {
        return new LocalAddress();
    }

    /**
     * Create an instance of {@link RemoteCacheScheme }
     * 
     */
    public RemoteCacheScheme createRemoteCacheScheme() {
        return new RemoteCacheScheme();
    }

    /**
     * Create an instance of {@link Directory }
     * 
     */
    public Directory createDirectory() {
        return new Directory();
    }

    /**
     * Create an instance of {@link ExternalScheme }
     * 
     */
    public ExternalScheme createExternalScheme() {
        return new ExternalScheme();
    }

    /**
     * Create an instance of {@link CustomStoreManager }
     * 
     */
    public CustomStoreManager createCustomStoreManager() {
        return new CustomStoreManager();
    }

    /**
     * Create an instance of {@link VersionPersistentScheme }
     * 
     */
    public VersionPersistentScheme createVersionPersistentScheme() {
        return new VersionPersistentScheme();
    }

    /**
     * Create an instance of {@link TcpAcceptor }
     * 
     */
    public TcpAcceptor createTcpAcceptor() {
        return new TcpAcceptor();
    }

    /**
     * Create an instance of {@link KeyAssociator }
     * 
     */
    public KeyAssociator createKeyAssociator() {
        return new KeyAssociator();
    }

    /**
     * Create an instance of {@link UseFilters }
     * 
     */
    public UseFilters createUseFilters() {
        return new UseFilters();
    }

    /**
     * Create an instance of {@link InvocationServiceProxy }
     * 
     */
    public InvocationServiceProxy createInvocationServiceProxy() {
        return new InvocationServiceProxy();
    }

    /**
     * Create an instance of {@link TcpInitiator }
     * 
     */
    public TcpInitiator createTcpInitiator() {
        return new TcpInitiator();
    }

    /**
     * Create an instance of {@link BackScheme }
     * 
     */
    public BackScheme createBackScheme() {
        return new BackScheme();
    }

    /**
     * Create an instance of {@link ClassFactoryName }
     * 
     */
    public ClassFactoryName createClassFactoryName() {
        return new ClassFactoryName();
    }

    /**
     * Create an instance of {@link VersionedNearScheme }
     * 
     */
    public VersionedNearScheme createVersionedNearScheme() {
        return new VersionedNearScheme();
    }

    /**
     * Create an instance of {@link AsyncStoreManager }
     * 
     */
    public AsyncStoreManager createAsyncStoreManager() {
        return new AsyncStoreManager();
    }

    /**
     * Create an instance of {@link RemoteInvocationScheme }
     * 
     */
    public RemoteInvocationScheme createRemoteInvocationScheme() {
        return new RemoteInvocationScheme();
    }

    /**
     * Create an instance of {@link ThreadCount }
     * 
     */
    public ThreadCount createThreadCount() {
        return new ThreadCount();
    }

    /**
     * Create an instance of {@link ReadWriteBackingMapScheme }
     * 
     */
    public ReadWriteBackingMapScheme createReadWriteBackingMapScheme() {
        return new ReadWriteBackingMapScheme();
    }

    /**
     * Create an instance of {@link HostRange }
     * 
     */
    public HostRange createHostRange() {
        return new HostRange();
    }

    /**
     * Create an instance of {@link RemoteAddresses }
     * 
     */
    public RemoteAddresses createRemoteAddresses() {
        return new RemoteAddresses();
    }

    /**
     * Create an instance of {@link FrontScheme }
     * 
     */
    public FrontScheme createFrontScheme() {
        return new FrontScheme();
    }

    /**
     * Create an instance of {@link CachingSchemes }
     * 
     */
    public CachingSchemes createCachingSchemes() {
        return new CachingSchemes();
    }

    /**
     * Create an instance of {@link ParamName }
     * 
     */
    public ParamName createParamName() {
        return new ParamName();
    }

    /**
     * Create an instance of {@link Autostart }
     * 
     */
    public Autostart createAutostart() {
        return new Autostart();
    }

    /**
     * Create an instance of {@link LhFileManager }
     * 
     */
    public LhFileManager createLhFileManager() {
        return new LhFileManager();
    }

    /**
     * Create an instance of {@link WriteDelay }
     * 
     */
    public WriteDelay createWriteDelay() {
        return new WriteDelay();
    }

    /**
     * Create an instance of {@link InitialSize }
     * 
     */
    public InitialSize createInitialSize() {
        return new InitialSize();
    }

    /**
     * Create an instance of {@link MethodName }
     * 
     */
    public MethodName createMethodName() {
        return new MethodName();
    }

    /**
     * Create an instance of {@link CacheServiceProxy }
     * 
     */
    public CacheServiceProxy createCacheServiceProxy() {
        return new CacheServiceProxy();
    }

    /**
     * Create an instance of {@link JmsAcceptor }
     * 
     */
    public JmsAcceptor createJmsAcceptor() {
        return new JmsAcceptor();
    }

    /**
     * Create an instance of {@link MissCacheScheme }
     * 
     */
    public MissCacheScheme createMissCacheScheme() {
        return new MissCacheScheme();
    }

    /**
     * Create an instance of {@link OverflowScheme }
     * 
     */
    public OverflowScheme createOverflowScheme() {
        return new OverflowScheme();
    }

    /**
     * Create an instance of {@link HostAddress }
     * 
     */
    public HostAddress createHostAddress() {
        return new HostAddress();
    }

    /**
     * Create an instance of {@link Port }
     * 
     */
    public Port createPort() {
        return new Port();
    }

    /**
     * Create an instance of {@link AcceptorConfig }
     * 
     */
    public AcceptorConfig createAcceptorConfig() {
        return new AcceptorConfig();
    }

    /**
     * Create an instance of {@link CacheConfig }
     * 
     */
    public CacheConfig createCacheConfig() {
        return new CacheConfig();
    }

    /**
     * Create an instance of {@link ProxyScheme }
     * 
     */
    public ProxyScheme createProxyScheme() {
        return new ProxyScheme();
    }

    /**
     * Create an instance of {@link JmsInitiator }
     * 
     */
    public JmsInitiator createJmsInitiator() {
        return new JmsInitiator();
    }

    /**
     * Create an instance of {@link InternalCacheScheme }
     * 
     */
    public InternalCacheScheme createInternalCacheScheme() {
        return new InternalCacheScheme();
    }

    /**
     * Create an instance of {@link FilterName }
     * 
     */
    public FilterName createFilterName() {
        return new FilterName();
    }

    /**
     * Create an instance of {@link BdbStoreManager }
     * 
     */
    public BdbStoreManager createBdbStoreManager() {
        return new BdbStoreManager();
    }

    /**
     * Create an instance of {@link SchemeName }
     * 
     */
    public SchemeName createSchemeName() {
        return new SchemeName();
    }

    /**
     * Create an instance of {@link OptimisticScheme }
     * 
     */
    public OptimisticScheme createOptimisticScheme() {
        return new OptimisticScheme();
    }

    /**
     * Create an instance of {@link Listener }
     * 
     */
    public Listener createListener() {
        return new Listener();
    }

    /**
     * Create an instance of {@link CacheMapping }
     * 
     */
    public CacheMapping createCacheMapping() {
        return new CacheMapping();
    }

}
